on: push
name: Docker Image CI

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: production
  DOCKER_USER: ${{secrets.DOCKER_HUB_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_HUB_PASSWORD}}
  DOCKER_REPO_NAME: "crashy-mccrashface"

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: docker login

      run: echo ${DOCKER_PASSWORD} | docker login --username "$DOCKER_USER" --password-stdin
    - name: Build the Docker image

      run: docker build . --file Dockerfile --tag ${DOCKER_USER}/${DOCKER_REPO_NAME}:${GITHUB_RUN_ID}
      
    - name: Docker Push

      run: |
        docker images
        docker push ${DOCKER_USER}/${DOCKER_REPO_NAME}:${GITHUB_RUN_ID}
  deploy:
    name: deploy to cluster
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
  
    - name: Deploy to Kubernetes cluster                                                                            
      uses: kodermax/kubectl-aws-eks@master                                                                         
      env:                                                                                                          
        RELEASE_IMAGE: ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPO_NAME }}:${GITHUB_RUN_ID}
      with:                                                                                                         
        args: set image deployment/${DOCKER_REPO_NAME}-pod app=${{ env.RELEASE_IMAGE }} --record -n $KUBE_NAMESPACE   
        
    - name: verify deployment
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: rollout status deployment/${DOCKER_REPO_NAME}-pod -n $KUBE_NAMESPACE 